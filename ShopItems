// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

contract ShoppingMall {
    struct Purchase {
        uint256 floor1Items;
        uint256 floor2Items;
        uint256 floor3Items;
    }
    mapping(address => Purchase) public purchases;

    function buyItems(uint256 floor1Items, uint256 floor2Items, uint256 floor3Items) public {
    
        assert(floor1Items > 1 && floor2Items > 1 && floor3Items > 1);

        require(floor1Items <= 5, "It is not allowed to buy more than 5 items in single floor");
        require(floor2Items <= 5, "It is not allowed to buy more than 5 items in single floor");
        require(floor3Items <= 5, "It is not allowed to buy more than 5 items in single floor");

        purchases[msg.sender].floor1Items += floor1Items;
        purchases[msg.sender].floor2Items += floor2Items;
        purchases[msg.sender].floor3Items += floor3Items;
    }

    function buy2Get1(uint256 itemCount) public pure {

        if (itemCount % 2 != 0) {
            revert("This offer is  applicable only for multiples of 2");
        }
    }
}
